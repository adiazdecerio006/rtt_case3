//
// Generated file, do not edit! Created by nedtool 5.6 from message_structure.msg.
//

#ifndef __MESSAGE_STRUCTURE_M_H
#define __MESSAGE_STRUCTURE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>message_structure.msg:22</tt> by nedtool.
 * <pre>
 * packet MessageStructure
 * {
 *     int messageType;
 *     long packetLength; //Packet length in bytes
 *     int flowIdentifier; //End to end flow identifier
 *     int flowSequenceIdentifier; //packet sequence number inside the end to end flow
 *     int retransmissionNumber; //Local link retransmission number
 *     int packetHopTracking[];
 *     simtime_t packetTimingTracking[];
 * }
 * </pre>
 */
class MessageStructure : public ::omnetpp::cPacket
{
  protected:
    int messageType;
    long packetLength;
    int flowIdentifier;
    int flowSequenceIdentifier;
    int retransmissionNumber;
    int *packetHopTracking; // array ptr
    unsigned int packetHopTracking_arraysize;
    ::omnetpp::simtime_t *packetTimingTracking; // array ptr
    unsigned int packetTimingTracking_arraysize;

  private:
    void copy(const MessageStructure& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MessageStructure&);

  public:
    MessageStructure(const char *name=nullptr, short kind=0);
    MessageStructure(const MessageStructure& other);
    virtual ~MessageStructure();
    MessageStructure& operator=(const MessageStructure& other);
    virtual MessageStructure *dup() const override {return new MessageStructure(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getMessageType() const;
    virtual void setMessageType(int messageType);
    virtual long getPacketLength() const;
    virtual void setPacketLength(long packetLength);
    virtual int getFlowIdentifier() const;
    virtual void setFlowIdentifier(int flowIdentifier);
    virtual int getFlowSequenceIdentifier() const;
    virtual void setFlowSequenceIdentifier(int flowSequenceIdentifier);
    virtual int getRetransmissionNumber() const;
    virtual void setRetransmissionNumber(int retransmissionNumber);
    virtual void setPacketHopTrackingArraySize(unsigned int size);
    virtual unsigned int getPacketHopTrackingArraySize() const;
    virtual int getPacketHopTracking(unsigned int k) const;
    virtual void setPacketHopTracking(unsigned int k, int packetHopTracking);
    virtual void setPacketTimingTrackingArraySize(unsigned int size);
    virtual unsigned int getPacketTimingTrackingArraySize() const;
    virtual ::omnetpp::simtime_t getPacketTimingTracking(unsigned int k) const;
    virtual void setPacketTimingTracking(unsigned int k, ::omnetpp::simtime_t packetTimingTracking);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MessageStructure& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MessageStructure& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MESSAGE_STRUCTURE_M_H

